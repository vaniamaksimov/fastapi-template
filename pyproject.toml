[tool.poetry]
name = "store"
version = "0.1.0"
description = ""
authors = ["vaniamaksimov <vaniamaksimov@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.97.0"
uvicorn = "^0.22.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.16"
alembic = "^1.11.1"
passlib = "^1.7.4"
bcrypt = "^4.0.1"
pydantic = {extras = ["email"], version = "^1.10.9"}


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.2"
aiosqlite = "^0.19.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.24.1"
asgi-lifespan = "^2.1.0"
factory-boy = "^3.2.1"
sqlparse = "^0.4.4"
ruff = "^0.0.272"
black = "^23.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests",]
filterwarnings = ["ignore:DeprecationWarning",]
norecursedirs = [".venv", "alembic",]
python_files = ["test_*.py",]
python_functions = ["test_*",]
pythonpath = [".", "src",]
addopts = ["-vv", "-p", "no:cacheprovider", "--tb=long"]
asyncio_mode = "auto"
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = "True"

[tool.ruff]
fix = true
src = ["src", "tests"]
select = ["E", "F"]
ignore = []
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".vscode",
]
per-file-ignores = {}
line-length = 88
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line-length = 88
skip-string-normalization = true
